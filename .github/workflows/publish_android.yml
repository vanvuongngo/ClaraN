name: "publish_android"

on:
  push:
    tags:
      - "v*"

jobs:
  publish:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    environment: dev
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Android signing
        env:
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}
          ANDROID_KEY_BASE64: ${{ secrets.ANDROID_KEY_BASE64 }}
        run: |
          cd apps/clara-n/src-tauri/gen/android
          echo "keyAlias=$ANDROID_KEY_ALIAS" > keystore.properties
          echo "password=$ANDROID_KEY_PASSWORD" >> keystore.properties
          base64 -d <<< "$ANDROID_KEY_BASE64" > $RUNNER_TEMP/keystore.jks
          echo "storeFile=${RUNNER_TEMP}/keystore.jks" >> keystore.properties

      # https://github.com/actions/setup-java
      - name: Setup JDK
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: "17"

      # https://github.com/android-actions/setup-android
      - name: Setup Android SDK
        uses: android-actions/setup-android@v3
      - name: set NDK_HOME environment
        run: |
          major_version=28
          ndk_version=$(${ANDROID_SDK_ROOT}/cmdline-tools/latest/sdkmanager --list | grep "ndk;${major_version}.*" | awk '{gsub("ndk;", ""); print $1}' | sort -V | tail -n1)
          echo "ANDROID_NDK_LATEST_HOME=$ANDROID_SDK_ROOT/ndk/$ndk_version" | tee -a /etc/environment
          echo "$ANDROID_NDK_LATEST_HOME"

      - name: Install pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10
          run_install: false

      # https://github.com/actions/setup-node
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: lts/*
          architecture: ${{ matrix.arch || '' }}
          cache: "pnpm"
          cache-dependency-path: pnpm-lock.yaml

      - name: Install dependencies
        run: pnpm i

      - name: Install Rust stable
        uses: dtolnay/rust-toolchain@stable # Set this to dtolnay/rust-toolchain@nightly
        with:
          # Those targets are only used on macos runners so it's in an `if` to slightly speed up windows and linux builds.
          targets: ${{ matrix.platform == 'macos-latest' && 'aarch64-apple-darwin,x86_64-apple-darwin' || '' }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: "./apps/clara-n/src-tauri -> target"

      # https://github.com/tauri-apps/tauri-action
      - name: Build Tauri and add to release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          APPLE_CERTIFICATE: ${{ secrets.APPLE_CERTIFICATE }}
          APPLE_CERTIFICATE_PASSWORD: ${{ secrets.APPLE_CERTIFICATE_PASSWORD }}
          APPLE_SIGNING_IDENTITY: ${{ env.CERT_ID }}
          NDK_HOME: "$ANDROID_NDK_LATEST_HOME"
        with:
          tagName: app-v__VERSION__ # the action automatically replaces \_\_VERSION\_\_ with the app version.
          releaseName: "ClaraN v__VERSION__"
          releaseBody: "See the assets to download this version and install."
          releaseDraft: true
          prerelease: false
          args: ${{ matrix.args || '' }}
          tauriScript: "pnpm tauri android"
